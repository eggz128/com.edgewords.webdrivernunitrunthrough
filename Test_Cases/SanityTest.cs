// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using com.edgewords.webdrivernunitrunthrough.Util;
using LumenWorks.Framework.IO.Csv;
using System.Reflection;
using System.IO;
using static com.edgewords.webdrivernunitrunthrough.Util.Globals;

namespace com.edgewords.webdrivernunitrunthrough.Test_Cases
{
    [TestFixture]
    public class SanityTest : com.edgewords.webdrivernunitrunthrough.Base_Classes.TestBase
    {
       
        [Test, Order(1), Category("Real Tests")]
        public void sanity()
        {
            // Test name: Sanity
            // Step # | name | target | value
            // 1 | open | /webdriver2/ | 
            driver.Navigate().GoToUrl("http://www.edgewordstraining.co.uk/webdriver2/");
            // 2 | setWindowSize | 1169x556 | 
            //driver.Manage().Window.Size = new System.Drawing.Size(1169, 556);
            // 3 | click | css=li:nth-child(1) span | 
            driver.FindElement(By.CssSelector("li:nth-child(1) span")).Click();
            // 4 | click | id=username | 
            driver.FindElement(By.Id("username")).Click();
            // 5 | type | id=username | Edgewords
            driver.FindElement(By.Id("username")).SendKeys("Edgewords");
            // 6 | click | id=password | 
            driver.FindElement(By.Id("password")).Click();
            // 7 | type | id=password | edgewords123
            driver.FindElement(By.Id("password")).SendKeys("edgewords123");
            // 8 | click | linkText=Submit | 
            driver.FindElement(By.LinkText("Submit")).Click();
            Thread.Sleep(3000);
            // 9 | click | css=h1 | 
            driver.FindElement(By.CssSelector("h1")).Click();
            // 10 | assertText | css=h1 | Add A Record To the Database
            Assert.That(driver.FindElement(By.CssSelector("h1")).Text, Is.EqualTo("Add A Record To the Database"));
            string result = "";
            TestContext.WriteLine("Hello from SanityTest via TestContext");

        }


        [Test,Order(2), Category("Params"),TestCaseSource(typeof(HelperLib),nameof(HelperLib.GetTestData))]
        public void AnotherTest(string param1, string param2)
        {
            //string cmdlineparam = TestContext.Parameters["cmdlineparam"];
            //Console.WriteLine("The commandline param was " + cmdlineparam);


            //string runsettings = TestContext.Parameters["runsettingsparam"];
            //Console.WriteLine("The runsettings param was " + runsettings);

            string envVar = Environment.GetEnvironmentVariable("TestEnvVar");
            Console.WriteLine("The test environment variable was " + envVar);

            //Readded comment
            //Another comment
            //And another

            Console.WriteLine(param1 + " " + param2);
            Console.WriteLine(GLOBAL_BASE_URL);
            Assert.Pass("Passed");
        }

        //private static IEnumerable<string[]> GetTestData()
        //{
        //    var csvFile = Path.GetDirectoryName(Assembly.GetExecutingAssembly().CodeBase) + "\\TestData.csv";
        //    csvFile = new Uri(csvFile).LocalPath;

        //    using (var csv = new CsvReader(new StreamReader(csvFile), true))
        //    {
        //        while (csv.ReadNextRecord())
        //        {
        //            string data1 = csv[0];
        //            string data2 = csv[1];
        //            yield return new[] { data1, data2 };
        //        }
        //    }
        //}
    }
}